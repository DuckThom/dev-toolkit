#!/bin/bash

CURRENT_DIR=$(pwd)
BASE_PATH=$(dirname $(readlink -f $0))
COMMANDS_PATH=""
declare -A COMMANDS

function create-symlink () {
    echo 'dev was not found in $PATH'
    echo "Would you like to create a symlink from $CURRENT_DIR/dev to $HOME/.bin/dev ?"

    echo "Press enter to continue, Ctrl-C to quit"
    read

    ln -s "$CURRENT_DIR/dev" "$HOME/.bin/dev" || exit 1
}

which dev >> /dev/null 2>&1 || create-symlink

function load-global-commands () {
    while IFS= read -r -d $'\0' line; do
        source "$line"

        COMMANDS[$COMMAND]="$HELP_TEXT"
    done < <(find "$BASE_PATH" -type f -iname "*.command" -print0)
}

function load-local-commands () {
    COMMANDS_PATH=$CURRENT_DIR

    while [[ "$COMMANDS_PATH" != "" && ! -e "$COMMANDS_PATH/dev-commands" ]]; do
        COMMANDS_PATH=${COMMANDS_PATH%/*}
    done

    if [ -d "$COMMANDS_PATH" ]; then
        while IFS= read -r -d $'\0' line; do
            source "$line"

            COMMANDS[$COMMAND]="$HELP_TEXT"
        done < <(find "$COMMANDS_PATH" -type f -iname "*.command" -print0)
    fi
}

function show-usage () {
    echo "Usage: dev <command>"
    echo
    echo "Available commands:"
    echo

    for i in "${!COMMANDS[@]}"
    do
        echo "$i:"
        echo "    ${COMMANDS[$i]}"
        echo
    done
}

load-global-commands
load-local-commands

if [ "$1" == "" ] || [ "$1" == "help" ]; then
    show-usage
    exit 0
fi

declare -f "$1" >> /dev/null 2>&1

if [ "$?" == "0" ]; then
    eval "${@:1}"
else
    show-usage
fi
